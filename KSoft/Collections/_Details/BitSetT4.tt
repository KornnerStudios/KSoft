<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension="cs" #>
<#@ assembly name="$(VitaSolutionFamilyBinPath)KSoft.T4.dll" #>
<#@ import namespace="KSoft.T4" #>
using System;
using Contracts = System.Diagnostics.Contracts;
using Contract = System.Diagnostics.Contracts.Contract;

namespace KSoft.Collections
{
	using StateFilterEnumerator = IReadOnlyBitSetEnumerators.StateFilterEnumerator;

	using StateFilterEnumeratorWrapper = EnumeratorWrapper<int, IReadOnlyBitSetEnumerators.StateFilterEnumerator>;

	partial class BitSet
	{
<# foreach (var state_def in CollectionsT4.BitStateDefs) { #>
		/// <summary>Get the bit index of the next bit which is <#= state_def.DocNameVerbose #></summary>
		/// <param name="startBitIndex">Bit index to start at</param>
		/// <returns>The next <#= state_def.DocName #> bit index, or -1 if one isn't found</returns>
		public int Next<#= state_def.ApiName #>BitIndex(int startBitIndex = 0)
		{
			return NextBitIndex(startBitIndex, <#= state_def.ValueKeyword #>);
		}
		/// <summary>Enumeration of bit indexes in this BitSet which are <#= state_def.DocNameVerbose #></summary>
		public StateFilterEnumeratorWrapper <#= state_def.ApiName #>BitIndices { get {
			return new StateFilterEnumeratorWrapper(new StateFilterEnumerator(this, <#= state_def.ValueKeyword #>));
		} }

<# } #>
	};
}